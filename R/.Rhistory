Parcels <- read_sf("K:/Projects/BCDCOG/Features/Files_For_RDB/RDB_V3/Parcels.shp")
library(sf)
library(tidyverse)
library(tmap)
tmap_mode("view")
Parcels <- read_sf("K:/Projects/BCDCOG/Features/Files_For_RDB/RDB_V3/Parcels.shp")
Parcels$SDOS_AC <- NA
Parcels$DO_Site <- NA
Parcels$PrtlDOS <- NA
Parcels$SDOS_AC <- NA
cols <- c("ParclID"    ,"PropID"     ,"Landuse"   , "DO_Site"    ,"PrtlDOS"    ,"DOS_AR"     ,"DOSProp"    ,"Address",
"SalePri"    ,"LandVal"    ,"BldVal"    , "BldA_AC"    ,"TotVal"     ,"Area_AC"    ,"SlPrAcr"    ,"County",
"NumBlds"    ,"BldLndR"    ,"seg_name"  , "seg_num"    ,"in_pipe"    ,"stn_name"   ,"stn_name_O" ,"stn_name_1",
"stn_name_2" ,"geometry"   ,"SDOS_AC")
Dev_Sites <- read_sf("K:/Projects/BCDCOG/Features/Files_For_RDB/Lowcountry_Webmap/LC_Opportunity_Sites.shp")
Dev_Sites <- subset(Dev_Sites, Dev_Sites$ReviewHDR == "0" | Dev_Sites$ReviewHDR == "2")
tm_shape(Dev_Sites) + tm_polygons(col = "ReviewHDR")
DOSShape <- st_intersection(Dev_Sites, Parcels)
DOSShape$DOS_AR <- st_area(DOSShape)
DOSShape$DOS_AR <- as.numeric(DOSShape$DOS_AR) / 43560
DOSShape <- st_drop_geometry(DOSShape)
DOSShape <- DOSShape %>%
group_by(ParclID) %>%
summarise(DOS_AR = sum(DOS_AR))
names(Parcels)
View(Parcels)
Parcels <- left_join(Parcels[-6], DOSShape)
Parcels$DO_Site <- if_else(Parcels$DOS_AR > 0, true = 1, false = 0)
Parcels$DO_Site <- replace_na(Parcels$DO_Site, 0)
Parcels$PrtlDOS <- if_else(round(Parcels$DOS_AR, 3) == round(Parcels$Area_AC, 3), true = 0, false = 1)
Parcels$DOSProp <-  Parcels$DOS_AR / Parcels$Area_AC
Parcels$DOSProp[Parcels$DO_Site == 0] <- NA
Parcels$PrtlDOS[Parcels$DO_Site == 0] <- NA
Parcels$DOSProp[Parcels$DO_Site == 0] <- NA
Parcels$DOSProp[Parcels$PrtlDOS == 0] <- 1
col_order <- c("ParclID"    ,"PropID"     ,"Landuse"   , "DO_Site"    ,"PrtlDOS"    ,"DOS_AR"     ,"DOSProp"    ,"Address",
"SalePri"    ,"LandVal"    ,"BldVal"    , "BldA_AC"    ,"TotVal"     ,"Area_AC"    ,"SlPrAcr"    ,"County",
"NumBlds"    ,"BldLndR"    ,"seg_name"  , "seg_num"    ,"in_pipe"    ,"stn_name"   ,"stn_name_O" ,"stn_name_1",
"stn_name_2" ,"geometry"   ,"SDOS_AC")
tm_shape(Dev_Sites) + tm_polygons(col = "ReviewHDR") + tm_shape(Parcels) + tm_polygons(col = "DO_Site")
Parcels$SDOS_AC == Parcels$DOS_AR
Parcels$DOS_AR[!is.na(Parcels$DOS_AR)]
Parcels$SDOS_AC[!is.na(Parcels$SDOS_AC)]
View(Parcels)
names(Parcels)
col_order <- c("ParclID"    ,"PropID"     ,"Landuse"   , "DO_Site"    ,"PrtlDOS"    ,"DOS_AR"     ,"DOSProp"    ,"Address",
"SalePri"    ,"LandVal"    ,"BldVal"    , "BldA_AC"    ,"TotVal"     ,"Area_AC"    ,"SlPrAcr"    ,"County",
"NumBlds"    ,"BldLndR"    ,"seg_name"  , "seg_num"    ,"in_pipe"    ,"stn_name"   ,"stn_name_O" ,"stn_name_1",
"stn_name_2" ,"Sq_Feet"    ,"Exp_LU"    , "Exp_FAR"    ,"SF_Cpct"    ,"geometry"   )
Parcels <- Parcels[col_order]
View(Parcels)
col_order <- c("ParclID"    ,"PropID"     ,"Landuse"   , "DO_Site"    ,"PrtlDOS"    ,"DOS_AR"     ,"DOSProp"    ,"Address",
"SalePri"    ,"LandVal"    ,"BldVal"    , "BldA_AC"    ,"TotVal"     ,"Area_AC"    ,"SlPrAcr"    ,"County",
"NumBlds"    ,"BldLndR"    ,"seg_name"  , "seg_num"    ,"in_pipe"    ,"stn_name"   ,"stn_n_O" ,"stn_n_1",
"stn_n_2" ,"Sq_Feet"    ,"Exp_LU"    , "Exp_FAR"    ,"SF_Cpct"    ,"geometry"   )
Parcels <- Parcels[col_order]
col_order <- c("ParclID"    ,"PropID"     ,"Landuse"   , "DO_Site"    ,"PrtlDOS"    ,"DOS_AR"     ,"DOSProp"    ,"Address",
"SalePri"    ,"LandVal"    ,"BldVal"    , "BldA_AC"    ,"TotVal"     ,"Area_AC"    ,"SlPrAcr"    ,"County",
"NumBlds"    ,"BldLndR"    ,"seg_nam"  , "seg_num"    ,"in_pipe"    ,"stn_nam"   ,"stn_n_O" ,"stn_n_1",
"stn_n_2" ,"Sq_Feet"    ,"Exp_LU"    , "Exp_FAR"    ,"SF_Cpct"    ,"geometry"   )
Parcels <- Parcels[col_order]
setwd("K:/Projects/BCDCOG/Features/Files_For_RDB/RDB_V3")
View(Parcels)
write_sf(Parcels, "Parcels.shp")
rm(list = ls())
library(sf)
library(tmap)
library(tidyverse)
#function for mode
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
setwd("K:/Projects/BCDCOG/Features/Files_For_RDB/RDB_V3")
Parcels <- read_sf("Parcels.shp")
Parcels <- read_sf("Parcels.shp")
Parcels$Sq_Feet <- st_area(Parcels)
Parcels$Sq_Feet <- as.numeric(Parcels$Sq_Feet)
Small_Parcels <- subset(Parcels, Parcels$Sq_Feet <= 12000)
Large_Parcels <- subset(Parcels, Parcels$Sq_Feet >  12000)
# parcels less than 12000 sq ft
Small_Parcels$Exp_LU <- Small_Parcels$Landuse #update to make vacant single family
Small_Parcels$Exp_LU[Small_Parcels$Exp_LU == "Vacant/Undeveloped"] <- "Single-family"
Small_Parcels$SF_Capacity <- if_else(Small_Parcels$Exp_LU == "Vacant/Undeveloped" |
Small_Parcels$Exp_LU == "Multifamily" |
Small_Parcels$Exp_LU == "Single-family",
true  = round(Small_Parcels$Sq_Feet / 1500, digits = 0),
false = 0)
Large_Parcels$Landuse != "Vacant/Undeveloped"
Large_Parcels$Exp_LU[Large_Parcels$Landuse != "Vacant/Undeveloped"]
Large_Parcels$Exp_LU[Large_Parcels$Landuse != "Vacant/Undeveloped"] <- Large_Parcels$Landuse[Large_Parcels$Landuse != "Vacant/Undeveloped"]
Large_Parcels$Exp_LU <- Large_Parcels$Landuse
Vacant_Large <- subset(Large_Parcels$Exp_LU == "Vacant/Undeveloped")
Vacant_Large <- subset(Large_Parcels, Large_Parcels$Exp_LU == "Vacant/Undeveloped")
Large_Parcels$Exp_FAR <- NA
Vacant_Large <- subset(Large_Parcels, Large_Parcels$Exp_LU == "Vacant/Undeveloped")
View(Small_Parcels)
library(sf)
library(tmap)
library(tidyverse)
#function for mode
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
setwd("K:/Projects/BCDCOG/Features/Files_For_RDB/RDB_V3")
Parcels <- read_sf("Parcels.shp")
Parcels$Sq_Feet <- st_area(Parcels)
Parcels$Sq_Feet <- as.numeric(Parcels$Sq_Feet)
Small_Parcels <- subset(Parcels, Parcels$Sq_Feet <= 12000)
Large_Parcels <- subset(Parcels, Parcels$Sq_Feet >  12000)
Small_Parcels$Exp_LU <- Small_Parcels$Landuse #update to make vacant single family
Small_Parcels$Exp_LU[Small_Parcels$Exp_LU == "Vacant/Undeveloped"] <- "Single-family"
Small_Parcels$SF_Cpct <- if_else(Small_Parcels$Exp_LU == "Vacant/Undeveloped" |
Small_Parcels$Exp_LU == "Multifamily" |
Small_Parcels$Exp_LU == "Single-family",
true  = round(Small_Parcels$Sq_Feet / 1500, digits = 0),
false = 0)
Large_Parcels$Exp_LU <- Large_Parcels$Landuse
Large_Parcels$Exp_FAR <- NA
Vacant_Large <- subset(Large_Parcels, Large_Parcels$Exp_LU == "Vacant/Undeveloped")
unique(Large_Parcels$Landuse)
Vacant_Large <- subset(Large_Parcels, Large_Parcels$Exp_LU == "Vacant/Undeveloped" | is.na(Large_Parcels$Exp_LU))
subset(Large_Parcels, Large_Parcels$Exp_LU != "Vacant/Undeveloped" |
Large_Parcels$Exp_LU != "Utilities" |
Large_Parcels$Exp_LU != "Transportation"  |
Large_Parcels$Exp_LU != "Agriculture/Forestry" |
Large_Parcels$Exp_LU != "Recreation/Cultural" |
!is.na(Large_Parcels$Exp_LU))
subset(Large_Parcels, Large_Parcels$Exp_LU != "Vacant/Undeveloped"    &
Large_Parcels$Exp_LU != "Utilities"            &
Large_Parcels$Exp_LU != "Transportation"       &
Large_Parcels$Exp_LU != "Agriculture/Forestry" &
Large_Parcels$Exp_LU != "Recreation/Cultural"  &
!is.na(Large_Parcels$Exp_LU))
1449 + 6472
subset(Parcels, Parcels$Landuse != "Vacant/Undeveloped"    &
Parcels$Landuse != "Utilities"            &
Parcels$Landuse != "Transportation"       &
Parcels$Landuse != "Agriculture/Forestry" &
Parcels$Landuse != "Recreation/Cultural"  &
!is.na(Parcels$Landuse))
Relevant_Parcels <- subset(Parcels, Parcels$Landuse != "Vacant/Undeveloped"    &
Parcels$Landuse != "Utilities"            &
Parcels$Landuse != "Transportation"       &
Parcels$Landuse != "Agriculture/Forestry" &
Parcels$Landuse != "Recreation/Cultural"  &
!is.na(Parcels$Landuse))
Small_Parcels$Exp_LU[is.na(Small_Parcels$Exp_LU)]
Small_Parcels$Exp_LU[is.na(Small_Parcels$Exp_LU)] <- "Single-family"
Small_Parcels$Exp_LU <- Small_Parcels$Landuse #update to make vacant single family
Small_Parcels$Exp_LU[Small_Parcels$Exp_LU == "Vacant/Undeveloped"] <- "Single-family"
Small_Parcels$Exp_LU[is.na(Small_Parcels$Exp_LU)] <- "Single-family"
Small_Parcels$SF_Cpct <- if_else(Small_Parcels$Exp_LU == "Vacant/Undeveloped" |
Small_Parcels$Exp_LU == "Multifamily" |
Small_Parcels$Exp_LU == "Single-family",
true  = round(Small_Parcels$Sq_Feet / 1500, digits = 0),
false = 0)
Small_Parcels$Exp_LU[is.na(Small_Parcels$Exp_LU)]
Large_Parcels$Exp_LU <- Large_Parcels$Landuse
Large_Parcels$Exp_FAR <- NA
Vacant_Large <- subset(Large_Parcels, Large_Parcels$Exp_LU == "Vacant/Undeveloped" | is.na(Large_Parcels$Exp_LU))
Relevant_Parcels <- subset(Parcels, Parcels$Landuse != "Vacant/Undeveloped"    &
Parcels$Landuse != "Utilities"            &
Parcels$Landuse != "Transportation"       &
Parcels$Landuse != "Agriculture/Forestry" &
Parcels$Landuse != "Recreation/Cultural"  &
!is.na(Parcels$Landuse))
View(Relevant_Parcels)
EXP_LU_Join <- st_join(Vacant_Large[1,], Relevant_Parcels [c("Landuse", "BldA_AC", "geometry")], join = st_is_within_distance, dist = 1000, suffix = c("", "_org"))
EXP_LU_Join %>%
group_by(ParclID) %>%
summarise(Exp_LU       = max(sum(Sq_Feet(group_by(Landuse_org)))))
EXP_LU_Join %>%
group_by(ParclID) %>%
summarise(Exp_LU       = group_by(Landuse_org) %>% max(sum(Sq_Feet)) )
EXP_LU_Join %>%
group_by(ParclID, Landuse_org) %>%
summarise(Landuse_SqFT       = sum(Sq_Feet))
EXP_LU_Join %>%
group_by(ParclID, Landuse_org) %>%
summarise(Landuse_SqFT = sum(Sq_Feet)) %>%
group_by(ParclID) %>%
summarise(Exp_LU       = max(Landuse_SqFT))
EXP_LU_Join %>%
group_by(ParclID, Landuse_org) %>%
summarise(Landuse_SqFT = sum(Sq_Feet)) %>%
group_by(ParclID) %>%
summarise(Exp_LU       = Landuse_org[max(Landuse_SqFT)])
EXP_LU_Join %>%
group_by(ParclID, Landuse_org) %>%
summarise(Landuse_SqFT = sum(Sq_Feet))
EXP_LU_Join %>%
group_by(ParclID, Landuse_org) %>%
summarise(Landuse_SqFT = sum(Sq_Feet)) %>%
group_by(ParclID) %>%
arrange(desc(Landuse_SqFT)) %>%
summarise(Exp_LU       = first(Landuse_org))
EXP_LU_Join <- st_join(Vacant_Large[5,], Relevant_Parcels [c("Landuse", "BldA_AC", "geometry")], join = st_is_within_distance, dist = 1000, suffix = c("", "_org"))
EXP_LU_Join %>%
group_by(ParclID, Landuse_org) %>%
summarise(Landuse_SqFT = sum(Sq_Feet)) %>%
group_by(ParclID) %>%
arrange(desc(Landuse_SqFT)) %>%
summarise(Exp_LU       = first(Landuse_org))
View(EXP_LU_Join)
EXP_LU_Join <- st_join(Vacant_Large[1:5,], Relevant_Parcels [c("Landuse", "BldA_AC", "geometry")], join = st_is_within_distance, dist = 1000, suffix = c("", "_org"))
st_drop_geometry(EXP_LU_Join) %>%
group_by(ParclID, Landuse_org) %>%
summarise(Landuse_SqFT = sum(Sq_Feet)) %>%
group_by(ParclID) %>%
arrange(desc(Landuse_SqFT)) %>%
summarise(Exp_LU       = first(Landuse_org))
st_drop_geometry(EXP_LU_Join) %>%
group_by(ParclID, Landuse_org) %>%
summarise(Landuse_SqFT = sum(Sq_Feet)) %>%
group_by(ParclID) %>%
arrange(desc(Landuse_SqFT))
st_drop_geometry(EXP_LU_Join) %>%
group_by(ParclID, Landuse_org) %>%
summarise(Landuse_SqFT = sum(Sq_Feet)) %>%
group_by(ParclID)
EXP_LU_Join <- st_join(Vacant_Large[45:47,], Relevant_Parcels [c("Landuse", "BldA_AC", "geometry")], join = st_is_within_distance, dist = 1000, suffix = c("", "_org"))
st_drop_geometry(EXP_LU_Join) %>%
group_by(ParclID, Landuse_org) %>%
summarise(Landuse_SqFT = sum(Sq_Feet))
View(EXP_LU_Join)
EXP_LU_Join <- st_join(Vacant_Large[45:47,], Relevant_Parcels [c("Landuse", "BldA_AC", "Sq_Feet", "geometry")], join = st_is_within_distance, dist = 1000, suffix = c("", "_org"))
View(EXP_LU_Join)
st_drop_geometry(EXP_LU_Join) %>%
group_by(ParclID, Landuse_org) %>%
summarise(Landuse_SqFT = sum(Sq_Feet_Org))
st_drop_geometry(EXP_LU_Join) %>%
group_by(ParclID, Landuse_org) %>%
summarise(Landuse_SqFT = sum(Sq_Feet_org))
EXP_LU_Join <- st_join(Vacant_Large[1:5,], Relevant_Parcels [c("Landuse", "BldA_AC", "Sq_Feet", "geometry")], join = st_is_within_distance, dist = 1000, suffix = c("", "_org"))
st_drop_geometry(EXP_LU_Join) %>%
group_by(ParclID, Landuse_org) %>%
summarise(Landuse_SqFT = sum(Sq_Feet_org))
st_drop_geometry(EXP_LU_Join) %>%
group_by(ParclID, Landuse_org) %>%
summarise(Landuse_SqFT = sum(Sq_Feet_org)) %>%
group_by(ParclID) %>%
arrange(desc(Landuse_SqFT)) %>%
summarise(Exp_LU       = first(Landuse_org))
EXP_LU_Join <- st_join(Vacant_Large, Relevant_Parcels [c("Landuse", "BldA_AC", "Sq_Feet", "geometry")], join = st_is_within_distance, dist = 1000, suffix = c("", "_org"))
Vacant_LUs =
st_drop_geometry(EXP_LU_Join) %>%
group_by(ParclID, Landuse_org) %>%
summarise(Landuse_SqFT = sum(Sq_Feet_org)) %>%
group_by(ParclID) %>%
arrange(desc(Landuse_SqFT)) %>%
summarise(Exp_LU       = first(Landuse_org))
View(Vacant_LUs)
Vacant_Large[-"Exp_LU"]
View(Vacant_Large)
Vacant_Large[-27]
Vacant_Large <- left_join(Vacant_Large[-27], Vacant_LUs)
count(Vacant_Large, EXP_LU)
count(Vacant_Large, Exp_LU)
Vacant_Large[is.na(Vacant_Large$Exp_LU)]
subset(Vacant_Large, is.na(Vacant_Large$Exp_LU))
tm_shape(subset(Vacant_Large, is.na(Vacant_Large$Exp_LU))) + tm_polygons()
tm_shape(subset(Vacant_Large, is.na(Vacant_Large$Exp_LU))) + tm_polygons() + tm_shape(Relevant_Parcels) + tm_polygons(col = "Landuse")
Vacant_Large[is.na(Vacant_Large$Exp_LU)]
Vacant_Large[is.na(Vacant_Large$Exp_LU)] <- "Single-family"
Vacant_Large$Exp_LU[is.na(Vacant_Large$Exp_LU)]
Vacant_Large$Exp_LU[is.na(Vacant_Large$Exp_LU)] <- "Single-family"
subset(Vacant_Large, is.na(Vacant_Large$Exp_LU))
count(Small_Parcels, Exp_LU)
subset(Large_Parcels, Large_Parcels$Exp_LU != "Vacant/Undeveloped" & !is.na(Large_Parcels$Exp_LU))
6694 + 1449
Non_Vacant_Large <- subset(Large_Parcels, Large_Parcels$Exp_LU != "Vacant/Undeveloped" & !is.na(Large_Parcels$Exp_LU))
unique(Vacant_Large$Exp_LU)
rbind(Non_Vacant_Large, Vacant_Large)
Large_Parcels <- rbind(Non_Vacant_Large, Vacant_Large)
unique(Large_Parcels$Exp_LU)
rm(Vacant_Large, Non_Vacant_Large)
Large_Residential <- subset(Large_Parcels, Large_Parcels$Exp_LU == "Single-family" |
Large_Parcels$Exp_LU == "Multifamily")
rm(Relevant_Parcels)
## office
Large_Office <- subset(Large_Parcels, Large_Parcels$Exp_LU == "Office")
## retail
Large_retail <- subset(Large_Parcels, Large_Parcels$Exp_LU == "Commercial/Retail")
## Institutional
Large_institutional <- subset(Large_Parcels, Large_Parcels$Exp_LU == "Institutional")
## industrial
Large_industrial <- subset(Large_Parcels, Large_Parcels$Exp_LU == "Industrial/Manufacturing")
subset(Parcels[c("Landuse", "BldA_AC", "geometry")], Parcels$Landuse == "Office")
EXP_LU_Join <- st_join(Vacant_Large, subset(Parcels[c("Landuse", "BldA_AC", "geometry")], Parcels$Landuse == "Office"),
join = st_is_within_distance, dist = 1000, suffix = c("", "_org"))
EXP_LU_Join <- st_join(Large_Office, subset(Parcels[c("Landuse", "BldA_AC", "geometry")], Parcels$Landuse == "Office"),
join = st_is_within_distance, dist = 1000, suffix = c("", "_org"))
st_drop_geometry(EXP_LU_Join) %>%
group_by(ParclID) %>%
summarise(Mean_FAR      = mean(BldA_AC_org /  Area_AC),
Max_FAR       = max(BldA_AC_org /  Area_AC)
)
FAR_LU =
st_drop_geometry(EXP_LU_Join) %>%
group_by(ParclID) %>%
summarise(Mean_FAR      = mean(BldA_AC_org /  Area_AC),
Max_FAR       = max(BldA_AC_org /  Area_AC)
)
Large_Office[!"Exp_FAR"]
Large_Office[-which(names(Large_Office) == "Exp_FAR")]
Large_Office <- left_join(Large_Office[-which(names(Large_Office) == "Exp_FAR")], FAR_LU)
rbind(Large_industrial, Large_Office, Large_Residential, Large_retail, Large_industrial)
sum(nrow(c(Large_industrial, Large_Office, Large_Residential, Large_retail, Large_industrial)))
sum(nrow(Large_industrial), nrow(Large_Office), nrow(Large_Residential), nrow(Large_retail), nrow(Large_industrial))
sum(nrow(Large_industrial), nrow(Large_Office), nrow(Large_Residential), nrow(Large_retail), nrow(Large_institutional))
unique(Large_Parcels$Exp_LU)
Large_non_rel <- subset(Large_Parcels, Large_Parcels$Exp_LU == "Recreation/Cultural" |
Large_Parcels$Exp_LU == "Agriculture/Forestry" |
Large_Parcels$Exp_LU == "Utilities")
sum(nrow(Large_industrial), nrow(Large_Office), nrow(Large_Residential), nrow(Large_retail), nrow(Large_institutional), nrow(Large_non_rel))
Large_non_rel <- subset(Large_Parcels, Large_Parcels$Exp_LU == "Recreation/Cultural" |
Large_Parcels$Exp_LU == "Agriculture/Forestry" |
Large_Parcels$Exp_LU == "Utilities" |
Large_Parcels$Exp_LU == "Transportation")
sum(nrow(Large_industrial), nrow(Large_Office), nrow(Large_Residential), nrow(Large_retail), nrow(Large_institutional), nrow(Large_non_rel))
Large_non_rel <- Large_non_rel[-which(names(Large_non_rel) == "Exp_FAR")]
Small_Parcels <- Small_Parcels[-which(names(Small_Parcels) == "Exp_FAR")]
Small_Parcels$Mean_FAR <- NA
Small_Parcels$Max_FAR <- NA
Small_Parcels[-which(names(Small_Parcels) == "Exp_FAR")]
subset(Parcels[c("Landuse", "BldA_AC", "geometry")], Parcels$Landuse == "Commercial/Retail")
## retail
Large_retail <- subset(Large_Parcels, Large_Parcels$Exp_LU == "Commercial/Retail")
EXP_LU_Join <- st_join(Large_retail, subset(Parcels[c("Landuse", "BldA_AC", "geometry")], Parcels$Landuse == "Commercial/Retail"),
join = st_is_within_distance, dist = 1000, suffix = c("", "_org"))
FAR_LU =
st_drop_geometry(EXP_LU_Join) %>%
group_by(ParclID) %>%
summarise(Mean_FAR      = mean(BldA_AC_org /  Area_AC),
Max_FAR       = max(BldA_AC_org /  Area_AC)
)
Large_retail <- left_join(Large_retail[-which(names(Large_retail) == "Exp_FAR")], FAR_LU)
## Institutional
Large_institutional <- subset(Large_Parcels, Large_Parcels$Exp_LU == "Institutional")
EXP_LU_Join <- st_join(Large_institutional, subset(Parcels[c("Landuse", "BldA_AC", "geometry")], Parcels$Landuse == "Institutional"),
join = st_is_within_distance, dist = 1000, suffix = c("", "_org"))
FAR_LU =
st_drop_geometry(EXP_LU_Join) %>%
group_by(ParclID) %>%
summarise(Mean_FAR      = mean(BldA_AC_org /  Area_AC),
Max_FAR       = max(BldA_AC_org /  Area_AC)
)
Large_institutional <- left_join(Large_institutional[-which(names(Large_institutional) == "Exp_FAR")], FAR_LU)
## industrial
Large_industrial <- subset(Large_Parcels, Large_Parcels$Exp_LU == "Industrial/Manufacturing")
Large_industrial <- subset(Large_Parcels, Large_Parcels$Exp_LU == "Institutional")
EXP_LU_Join <- st_join(Large_industrial, subset(Parcels[c("Landuse", "BldA_AC", "geometry")], Parcels$Landuse == "Industrial/Manufacturing"),
join = st_is_within_distance, dist = 1000, suffix = c("", "_org"))
FAR_LU =
st_drop_geometry(EXP_LU_Join) %>%
group_by(ParclID) %>%
summarise(Mean_FAR      = mean(BldA_AC_org /  Area_AC),
Max_FAR       = max(BldA_AC_org /  Area_AC)
)
Large_industrial <- left_join(Large_industrial[-which(names(Large_industrial) == "Exp_FAR")], FAR_LU)
## non relevant
Large_non_rel <- subset(Large_Parcels, Large_Parcels$Exp_LU == "Recreation/Cultural" |
Large_Parcels$Exp_LU == "Agriculture/Forestry" |
Large_Parcels$Exp_LU == "Utilities" |
Large_Parcels$Exp_LU == "Transportation")
Large_non_rel <- Large_non_rel[-which(names(Large_non_rel) == "Exp_FAR")]
Large_non_rel$Mean_FAR <- NA
Large_non_rel$Max_FAR <- NA
Small_Parcels <- Small_Parcels[-which(names(Small_Parcels) == "Exp_FAR")]
Small_Parcels$Mean_FAR <- NA
Small_Parcels$Max_FAR <- NA
Large_Parcels <- rbind(Large_industrial, Large_Office, Large_Residential, Large_retail, Large_industrial, Large_non_rel)
Parcels <- rbind(Small_Parcels, Large_Parcels)
Large_industrial <- subset(Large_Parcels, Large_Parcels$Exp_LU == "Industrial/Manufacturing")
EXP_LU_Join <- st_join(Large_industrial, subset(Parcels[c("Landuse", "BldA_AC", "geometry")], Parcels$Landuse == "Industrial/Manufacturing"),
join = st_is_within_distance, dist = 1000, suffix = c("", "_org"))
FAR_LU =
st_drop_geometry(EXP_LU_Join) %>%
group_by(ParclID) %>%
summarise(Mean_FAR      = mean(BldA_AC_org /  Area_AC),
Max_FAR       = max(BldA_AC_org /  Area_AC)
)
Large_industrial <- left_join(Large_industrial[-which(names(Large_industrial) == "Exp_FAR")], FAR_LU)
sum(nrow(Large_industrial), nrow(Large_Office), nrow(Large_Residential), nrow(Large_retail), nrow(Large_institutional), nrow(Large_non_rel))
Large_Parcels <- rbind(Large_industrial, Large_Office, Large_Residential, Large_retail, Large_industrial, Large_non_rel)
Large_Residential <- Large_Residential[-which(names(Large_Residential) == "Exp_FAR")]
Large_Residential$Mean_FAR <- NA
Large_Residential$Max_FAR  <- NA
Large_Parcels <- rbind(Large_industrial, Large_Office, Large_Residential, Large_retail, Large_industrial, Large_non_rel)
Parcels <- rbind(Small_Parcels, Large_Parcels)
Parcels <- read_sf("Parcels.shp")
Parcels$Sq_Feet <- st_area(Parcels)
Parcels$Sq_Feet <- as.numeric(Parcels$Sq_Feet)
Small_Parcels <- subset(Parcels, Parcels$Sq_Feet <= 12000)
Small_Parcels$Exp_LU <- Small_Parcels$Landuse #update to make vacant single family
Small_Parcels$Exp_LU[Small_Parcels$Exp_LU == "Vacant/Undeveloped"] <- "Single-family"
Small_Parcels$Exp_LU[is.na(Small_Parcels$Exp_LU)] <- "Single-family"
Small_Parcels$SF_Cpct <- if_else(Small_Parcels$Exp_LU == "Vacant/Undeveloped" |
Small_Parcels$Exp_LU == "Multifamily" |
Small_Parcels$Exp_LU == "Single-family",
true  = round(Small_Parcels$Sq_Feet / 1500, digits = 0),
false = 0)
Small_Parcels <- Small_Parcels[-which(names(Small_Parcels) == "Exp_FAR")]
Small_Parcels$Mean_FAR <- NA
Small_Parcels$Max_FAR <- NA
Large_Parcels <- rbind(Large_industrial, Large_Office, Large_Residential, Large_retail, Large_industrial, Large_non_rel)
Parcels <- rbind(Small_Parcels, Large_Parcels)
View(Parcels)
Parcels$SF_Cpct[Parcels$Exp_LU == "Single-family"] <- round(Parcels$Sq_Feet / 1500, digits = 0)
Parcels$SF_Cpct[Parcels$Exp_LU == "Single-family"] <- round(Parcels$Sq_Feet[Parcels$Exp_LU == "Single-family"] / 1500, digits = 0)
unique(Parcels$Exp_LU)
Parcels$SF_Cpct[Parcels$Exp_LU == "Multifamily"] <- round(Parcels$Sq_Feet[Parcels$Exp_LU == "Multifamily"] / 1500, digits = 0)
subset(Parcels, Parcels$Exp_LU != "Multifamily" & Parcels$Exp_LU != "Single-family")
count(subset(Parcels, Parcels$Exp_LU != "Multifamily" & Parcels$Exp_LU != "Single-family"), Exp_LU)
Parcels$SF_Cpct[Parcels$Exp_LU != "Multifamily" & Parcels$Exp_LU != "Single-family"] <- NA
tm_shape(Parcels) + tm_polygons(col = "Exp_LU")
write_sf(Parcels, "Parcels.shp")
write_sf(Parcels, "Parcels_EXP.shp")
